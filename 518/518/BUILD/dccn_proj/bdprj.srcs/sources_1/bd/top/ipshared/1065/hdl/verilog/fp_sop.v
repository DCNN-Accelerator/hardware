// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fp_sop,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=11.217000,HLS_SYN_LAT=3,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=32,HLS_SYN_FF=740,HLS_SYN_LUT=1002,HLS_VERSION=2019_2}" *)

module fp_sop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        kernel_patch_0,
        kernel_patch_1,
        kernel_patch_2,
        kernel_patch_3,
        kernel_patch_4,
        kernel_patch_5,
        kernel_patch_6,
        kernel_patch_7,
        kernel_patch_8,
        kernel_patch_9,
        kernel_patch_10,
        kernel_patch_11,
        kernel_patch_12,
        kernel_patch_13,
        kernel_patch_14,
        kernel_patch_15,
        kernel_patch_16,
        kernel_patch_17,
        kernel_patch_18,
        kernel_patch_19,
        kernel_patch_20,
        kernel_patch_21,
        kernel_patch_22,
        kernel_patch_23,
        kernel_patch_24,
        kernel_patch_25,
        kernel_patch_26,
        kernel_patch_27,
        kernel_patch_28,
        kernel_patch_29,
        kernel_patch_30,
        kernel_patch_31,
        kernel_patch_32,
        kernel_patch_33,
        kernel_patch_34,
        kernel_patch_35,
        kernel_patch_36,
        kernel_patch_37,
        kernel_patch_38,
        kernel_patch_39,
        kernel_patch_40,
        kernel_patch_41,
        kernel_patch_42,
        kernel_patch_43,
        kernel_patch_44,
        kernel_patch_45,
        kernel_patch_46,
        kernel_patch_47,
        kernel_patch_48,
        pixel_window_0,
        pixel_window_1,
        pixel_window_2,
        pixel_window_3,
        pixel_window_4,
        pixel_window_5,
        pixel_window_6,
        pixel_window_7,
        pixel_window_8,
        pixel_window_9,
        pixel_window_10,
        pixel_window_11,
        pixel_window_12,
        pixel_window_13,
        pixel_window_14,
        pixel_window_15,
        pixel_window_16,
        pixel_window_17,
        pixel_window_18,
        pixel_window_19,
        pixel_window_20,
        pixel_window_21,
        pixel_window_22,
        pixel_window_23,
        pixel_window_24,
        pixel_window_25,
        pixel_window_26,
        pixel_window_27,
        pixel_window_28,
        pixel_window_29,
        pixel_window_30,
        pixel_window_31,
        pixel_window_32,
        pixel_window_33,
        pixel_window_34,
        pixel_window_35,
        pixel_window_36,
        pixel_window_37,
        pixel_window_38,
        pixel_window_39,
        pixel_window_40,
        pixel_window_41,
        pixel_window_42,
        pixel_window_43,
        pixel_window_44,
        pixel_window_45,
        pixel_window_46,
        pixel_window_47,
        pixel_window_48,
        out_val,
        out_val_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] kernel_patch_0;
input  [7:0] kernel_patch_1;
input  [7:0] kernel_patch_2;
input  [7:0] kernel_patch_3;
input  [7:0] kernel_patch_4;
input  [7:0] kernel_patch_5;
input  [7:0] kernel_patch_6;
input  [7:0] kernel_patch_7;
input  [7:0] kernel_patch_8;
input  [7:0] kernel_patch_9;
input  [7:0] kernel_patch_10;
input  [7:0] kernel_patch_11;
input  [7:0] kernel_patch_12;
input  [7:0] kernel_patch_13;
input  [7:0] kernel_patch_14;
input  [7:0] kernel_patch_15;
input  [7:0] kernel_patch_16;
input  [7:0] kernel_patch_17;
input  [7:0] kernel_patch_18;
input  [7:0] kernel_patch_19;
input  [7:0] kernel_patch_20;
input  [7:0] kernel_patch_21;
input  [7:0] kernel_patch_22;
input  [7:0] kernel_patch_23;
input  [7:0] kernel_patch_24;
input  [7:0] kernel_patch_25;
input  [7:0] kernel_patch_26;
input  [7:0] kernel_patch_27;
input  [7:0] kernel_patch_28;
input  [7:0] kernel_patch_29;
input  [7:0] kernel_patch_30;
input  [7:0] kernel_patch_31;
input  [7:0] kernel_patch_32;
input  [7:0] kernel_patch_33;
input  [7:0] kernel_patch_34;
input  [7:0] kernel_patch_35;
input  [7:0] kernel_patch_36;
input  [7:0] kernel_patch_37;
input  [7:0] kernel_patch_38;
input  [7:0] kernel_patch_39;
input  [7:0] kernel_patch_40;
input  [7:0] kernel_patch_41;
input  [7:0] kernel_patch_42;
input  [7:0] kernel_patch_43;
input  [7:0] kernel_patch_44;
input  [7:0] kernel_patch_45;
input  [7:0] kernel_patch_46;
input  [7:0] kernel_patch_47;
input  [7:0] kernel_patch_48;
input  [7:0] pixel_window_0;
input  [7:0] pixel_window_1;
input  [7:0] pixel_window_2;
input  [7:0] pixel_window_3;
input  [7:0] pixel_window_4;
input  [7:0] pixel_window_5;
input  [7:0] pixel_window_6;
input  [7:0] pixel_window_7;
input  [7:0] pixel_window_8;
input  [7:0] pixel_window_9;
input  [7:0] pixel_window_10;
input  [7:0] pixel_window_11;
input  [7:0] pixel_window_12;
input  [7:0] pixel_window_13;
input  [7:0] pixel_window_14;
input  [7:0] pixel_window_15;
input  [7:0] pixel_window_16;
input  [7:0] pixel_window_17;
input  [7:0] pixel_window_18;
input  [7:0] pixel_window_19;
input  [7:0] pixel_window_20;
input  [7:0] pixel_window_21;
input  [7:0] pixel_window_22;
input  [7:0] pixel_window_23;
input  [7:0] pixel_window_24;
input  [7:0] pixel_window_25;
input  [7:0] pixel_window_26;
input  [7:0] pixel_window_27;
input  [7:0] pixel_window_28;
input  [7:0] pixel_window_29;
input  [7:0] pixel_window_30;
input  [7:0] pixel_window_31;
input  [7:0] pixel_window_32;
input  [7:0] pixel_window_33;
input  [7:0] pixel_window_34;
input  [7:0] pixel_window_35;
input  [7:0] pixel_window_36;
input  [7:0] pixel_window_37;
input  [7:0] pixel_window_38;
input  [7:0] pixel_window_39;
input  [7:0] pixel_window_40;
input  [7:0] pixel_window_41;
input  [7:0] pixel_window_42;
input  [7:0] pixel_window_43;
input  [7:0] pixel_window_44;
input  [7:0] pixel_window_45;
input  [7:0] pixel_window_46;
input  [7:0] pixel_window_47;
input  [7:0] pixel_window_48;
output  [15:0] out_val;
output   out_val_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_val_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
reg   [7:0] pixel_window_42_read_reg_1597;
reg   [7:0] pixel_window_39_read_reg_1602;
reg   [7:0] pixel_window_36_read_reg_1607;
reg   [7:0] pixel_window_33_read_reg_1612;
reg   [7:0] pixel_window_30_read_reg_1617;
reg   [7:0] pixel_window_27_read_reg_1622;
reg   [7:0] pixel_window_24_read_reg_1627;
reg   [7:0] pixel_window_21_read_reg_1632;
reg   [7:0] pixel_window_18_read_reg_1637;
reg   [7:0] pixel_window_15_read_reg_1642;
reg   [7:0] pixel_window_12_read_reg_1647;
reg   [7:0] pixel_window_9_read_reg_1652;
reg   [7:0] pixel_window_6_read_reg_1657;
reg   [7:0] pixel_window_3_read_reg_1662;
reg   [7:0] pixel_window_1_read_reg_1667;
reg  signed [7:0] kernel_patch_42_read_reg_1672;
reg  signed [7:0] kernel_patch_39_read_reg_1677;
reg  signed [7:0] kernel_patch_36_read_reg_1682;
reg  signed [7:0] kernel_patch_33_read_reg_1687;
reg  signed [7:0] kernel_patch_30_read_reg_1692;
reg  signed [7:0] kernel_patch_27_read_reg_1697;
reg  signed [7:0] kernel_patch_24_read_reg_1702;
reg  signed [7:0] kernel_patch_21_read_reg_1707;
reg  signed [7:0] kernel_patch_18_read_reg_1712;
reg  signed [7:0] kernel_patch_15_read_reg_1717;
reg  signed [7:0] kernel_patch_12_read_reg_1722;
reg  signed [7:0] kernel_patch_9_read_reg_1727;
reg  signed [7:0] kernel_patch_6_read_reg_1732;
reg  signed [7:0] kernel_patch_3_read_reg_1737;
reg  signed [7:0] kernel_patch_1_read_reg_1742;
wire  signed [15:0] grp_fu_1347_p3;
reg  signed [15:0] add_ln178_reg_1747;
wire  signed [15:0] grp_fu_1355_p3;
reg  signed [15:0] add_ln178_2_reg_1752;
wire  signed [15:0] grp_fu_1363_p3;
reg  signed [15:0] add_ln178_5_reg_1757;
wire  signed [15:0] grp_fu_1371_p3;
reg  signed [15:0] add_ln178_7_reg_1762;
wire  signed [15:0] grp_fu_1379_p3;
reg  signed [15:0] add_ln178_11_reg_1767;
wire  signed [15:0] grp_fu_1387_p3;
reg  signed [15:0] add_ln178_13_reg_1772;
wire  signed [15:0] grp_fu_1395_p3;
reg  signed [15:0] add_ln178_16_reg_1777;
wire  signed [15:0] grp_fu_1403_p3;
reg  signed [15:0] add_ln178_18_reg_1782;
wire  signed [15:0] grp_fu_1411_p3;
reg  signed [15:0] add_ln178_23_reg_1787;
wire  signed [15:0] grp_fu_1419_p3;
reg  signed [15:0] add_ln178_25_reg_1792;
wire  signed [15:0] grp_fu_1427_p3;
reg  signed [15:0] add_ln178_28_reg_1797;
wire  signed [15:0] grp_fu_1435_p3;
reg  signed [15:0] add_ln178_30_reg_1802;
wire  signed [15:0] grp_fu_1443_p3;
reg  signed [15:0] add_ln178_34_reg_1807;
wire  signed [15:0] grp_fu_1451_p3;
reg  signed [15:0] add_ln178_36_reg_1812;
wire  signed [15:0] grp_fu_1459_p3;
reg  signed [15:0] add_ln178_39_reg_1817;
wire  signed [15:0] grp_fu_1467_p3;
reg  signed [15:0] add_ln178_41_reg_1822;
wire  signed [15:0] grp_fu_1475_p3;
reg  signed [15:0] add_ln178_42_reg_1827;
wire  signed [15:0] grp_fu_1483_p3;
reg  signed [15:0] add_ln178_1_reg_1832;
wire  signed [15:0] grp_fu_1490_p3;
reg  signed [15:0] add_ln178_3_reg_1837;
(* use_dsp48 = "no" *) wire   [15:0] add_ln178_9_fu_1275_p2;
reg   [15:0] add_ln178_9_reg_1842;
wire  signed [15:0] grp_fu_1513_p3;
reg  signed [15:0] add_ln178_12_reg_1847;
wire  signed [15:0] grp_fu_1520_p3;
reg  signed [15:0] add_ln178_14_reg_1852;
(* use_dsp48 = "no" *) wire   [15:0] add_ln178_20_fu_1279_p2;
reg   [15:0] add_ln178_20_reg_1857;
(* use_dsp48 = "no" *) wire   [15:0] add_ln178_27_fu_1283_p2;
reg   [15:0] add_ln178_27_reg_1862;
(* use_dsp48 = "no" *) wire   [15:0] add_ln178_32_fu_1287_p2;
reg   [15:0] add_ln178_32_reg_1867;
wire  signed [15:0] grp_fu_1575_p3;
reg  signed [15:0] add_ln178_35_reg_1872;
wire  signed [15:0] grp_fu_1582_p3;
reg  signed [15:0] add_ln178_37_reg_1877;
(* use_dsp48 = "no" *) wire   [15:0] add_ln178_44_fu_1295_p2;
reg   [15:0] add_ln178_44_reg_1882;
wire   [15:0] add_ln178_10_fu_1304_p2;
reg   [15:0] add_ln178_10_reg_1887;
wire   [15:0] add_ln178_21_fu_1313_p2;
reg   [15:0] add_ln178_21_reg_1892;
wire   [15:0] add_ln178_46_fu_1331_p2;
reg   [15:0] add_ln178_46_reg_1897;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage0;
wire   [7:0] mul_ln123_fu_819_p0;
wire  signed [7:0] mul_ln123_fu_819_p1;
wire   [7:0] mul_ln127_fu_841_p0;
wire  signed [7:0] mul_ln127_fu_841_p1;
wire   [7:0] mul_ln130_fu_863_p0;
wire  signed [7:0] mul_ln130_fu_863_p1;
wire   [7:0] mul_ln134_fu_885_p0;
wire  signed [7:0] mul_ln134_fu_885_p1;
wire   [7:0] mul_ln137_fu_907_p0;
wire  signed [7:0] mul_ln137_fu_907_p1;
wire   [7:0] mul_ln140_fu_929_p0;
wire  signed [7:0] mul_ln140_fu_929_p1;
wire   [7:0] mul_ln143_fu_951_p0;
wire  signed [7:0] mul_ln143_fu_951_p1;
wire   [7:0] mul_ln147_fu_973_p0;
wire  signed [7:0] mul_ln147_fu_973_p1;
wire   [7:0] mul_ln150_fu_995_p0;
wire  signed [7:0] mul_ln150_fu_995_p1;
wire   [7:0] mul_ln153_fu_1017_p0;
wire  signed [7:0] mul_ln153_fu_1017_p1;
wire   [7:0] mul_ln157_fu_1039_p0;
wire  signed [7:0] mul_ln157_fu_1039_p1;
wire   [7:0] mul_ln160_fu_1061_p0;
wire  signed [7:0] mul_ln160_fu_1061_p1;
wire   [7:0] mul_ln163_fu_1083_p0;
wire  signed [7:0] mul_ln163_fu_1083_p1;
wire   [7:0] mul_ln167_fu_1105_p0;
wire  signed [7:0] mul_ln167_fu_1105_p1;
wire   [7:0] mul_ln170_fu_1127_p0;
wire  signed [7:0] mul_ln170_fu_1127_p1;
wire   [7:0] mul_ln172_fu_1149_p0;
wire  signed [7:0] mul_ln172_fu_1149_p1;
wire   [7:0] mul_ln174_fu_1171_p0;
wire  signed [7:0] mul_ln174_fu_1171_p1;
wire  signed [15:0] grp_fu_1505_p3;
wire  signed [15:0] grp_fu_1497_p3;
wire  signed [15:0] grp_fu_1535_p3;
wire  signed [15:0] grp_fu_1527_p3;
wire  signed [15:0] grp_fu_1551_p3;
wire  signed [15:0] grp_fu_1543_p3;
wire  signed [15:0] grp_fu_1567_p3;
wire  signed [15:0] grp_fu_1559_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln178_43_fu_1291_p2;
wire  signed [15:0] grp_fu_1589_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln178_4_fu_1300_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln178_15_fu_1309_p2;
(* use_dsp48 = "no" *) wire   [15:0] add_ln178_38_fu_1322_p2;
wire   [15:0] add_ln178_45_fu_1326_p2;
wire   [15:0] add_ln178_33_fu_1318_p2;
wire   [15:0] add_ln178_22_fu_1337_p2;
wire   [7:0] grp_fu_1347_p0;
wire   [15:0] grp_fu_1347_p2;
wire   [7:0] grp_fu_1355_p0;
wire   [15:0] grp_fu_1355_p2;
wire   [7:0] grp_fu_1363_p0;
wire   [15:0] grp_fu_1363_p2;
wire   [7:0] grp_fu_1371_p0;
wire   [15:0] grp_fu_1371_p2;
wire   [7:0] grp_fu_1379_p0;
wire   [15:0] grp_fu_1379_p2;
wire   [7:0] grp_fu_1387_p0;
wire   [15:0] grp_fu_1387_p2;
wire   [7:0] grp_fu_1395_p0;
wire   [15:0] grp_fu_1395_p2;
wire   [7:0] grp_fu_1403_p0;
wire   [15:0] grp_fu_1403_p2;
wire   [7:0] grp_fu_1411_p0;
wire   [15:0] grp_fu_1411_p2;
wire   [7:0] grp_fu_1419_p0;
wire   [15:0] grp_fu_1419_p2;
wire   [7:0] grp_fu_1427_p0;
wire   [15:0] grp_fu_1427_p2;
wire   [7:0] grp_fu_1435_p0;
wire   [15:0] grp_fu_1435_p2;
wire   [7:0] grp_fu_1443_p0;
wire   [15:0] grp_fu_1443_p2;
wire   [7:0] grp_fu_1451_p0;
wire   [15:0] grp_fu_1451_p2;
wire   [7:0] grp_fu_1459_p0;
wire   [15:0] grp_fu_1459_p2;
wire   [7:0] grp_fu_1467_p0;
wire   [15:0] grp_fu_1467_p2;
wire   [7:0] grp_fu_1475_p0;
wire   [15:0] grp_fu_1475_p2;
wire   [7:0] grp_fu_1483_p0;
wire   [7:0] grp_fu_1490_p0;
wire   [7:0] grp_fu_1497_p0;
wire   [7:0] grp_fu_1505_p0;
wire   [7:0] grp_fu_1513_p0;
wire   [7:0] grp_fu_1520_p0;
wire   [7:0] grp_fu_1527_p0;
wire   [7:0] grp_fu_1535_p0;
wire   [7:0] grp_fu_1543_p0;
wire   [7:0] grp_fu_1551_p0;
wire   [7:0] grp_fu_1559_p0;
wire   [7:0] grp_fu_1567_p0;
wire   [7:0] grp_fu_1575_p0;
wire   [7:0] grp_fu_1582_p0;
wire   [7:0] grp_fu_1589_p0;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] grp_fu_1347_p00;
wire   [15:0] grp_fu_1355_p00;
wire   [15:0] grp_fu_1363_p00;
wire   [15:0] grp_fu_1371_p00;
wire   [15:0] grp_fu_1379_p00;
wire   [15:0] grp_fu_1387_p00;
wire   [15:0] grp_fu_1395_p00;
wire   [15:0] grp_fu_1403_p00;
wire   [15:0] grp_fu_1411_p00;
wire   [15:0] grp_fu_1419_p00;
wire   [15:0] grp_fu_1427_p00;
wire   [15:0] grp_fu_1435_p00;
wire   [15:0] grp_fu_1443_p00;
wire   [15:0] grp_fu_1451_p00;
wire   [15:0] grp_fu_1459_p00;
wire   [15:0] grp_fu_1467_p00;
wire   [15:0] grp_fu_1475_p00;
wire   [15:0] grp_fu_1483_p00;
wire   [15:0] grp_fu_1490_p00;
wire   [15:0] grp_fu_1497_p00;
wire   [15:0] grp_fu_1505_p00;
wire   [15:0] grp_fu_1513_p00;
wire   [15:0] grp_fu_1520_p00;
wire   [15:0] grp_fu_1527_p00;
wire   [15:0] grp_fu_1535_p00;
wire   [15:0] grp_fu_1543_p00;
wire   [15:0] grp_fu_1551_p00;
wire   [15:0] grp_fu_1559_p00;
wire   [15:0] grp_fu_1567_p00;
wire   [15:0] grp_fu_1575_p00;
wire   [15:0] grp_fu_1582_p00;
wire   [15:0] grp_fu_1589_p00;
wire   [15:0] mul_ln123_fu_819_p00;
wire   [15:0] mul_ln127_fu_841_p00;
wire   [15:0] mul_ln130_fu_863_p00;
wire   [15:0] mul_ln134_fu_885_p00;
wire   [15:0] mul_ln137_fu_907_p00;
wire   [15:0] mul_ln140_fu_929_p00;
wire   [15:0] mul_ln143_fu_951_p00;
wire   [15:0] mul_ln147_fu_973_p00;
wire   [15:0] mul_ln150_fu_995_p00;
wire   [15:0] mul_ln153_fu_1017_p00;
wire   [15:0] mul_ln157_fu_1039_p00;
wire   [15:0] mul_ln160_fu_1061_p00;
wire   [15:0] mul_ln163_fu_1083_p00;
wire   [15:0] mul_ln167_fu_1105_p00;
wire   [15:0] mul_ln170_fu_1127_p00;
wire   [15:0] mul_ln172_fu_1149_p00;
wire   [15:0] mul_ln174_fu_1171_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U1(
    .din0(grp_fu_1347_p0),
    .din1(kernel_patch_2),
    .din2(grp_fu_1347_p2),
    .dout(grp_fu_1347_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U2(
    .din0(grp_fu_1355_p0),
    .din1(kernel_patch_5),
    .din2(grp_fu_1355_p2),
    .dout(grp_fu_1355_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U3(
    .din0(grp_fu_1363_p0),
    .din1(kernel_patch_8),
    .din2(grp_fu_1363_p2),
    .dout(grp_fu_1363_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U4(
    .din0(grp_fu_1371_p0),
    .din1(kernel_patch_11),
    .din2(grp_fu_1371_p2),
    .dout(grp_fu_1371_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U5(
    .din0(grp_fu_1379_p0),
    .din1(kernel_patch_14),
    .din2(grp_fu_1379_p2),
    .dout(grp_fu_1379_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U6(
    .din0(grp_fu_1387_p0),
    .din1(kernel_patch_17),
    .din2(grp_fu_1387_p2),
    .dout(grp_fu_1387_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U7(
    .din0(grp_fu_1395_p0),
    .din1(kernel_patch_20),
    .din2(grp_fu_1395_p2),
    .dout(grp_fu_1395_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U8(
    .din0(grp_fu_1403_p0),
    .din1(kernel_patch_23),
    .din2(grp_fu_1403_p2),
    .dout(grp_fu_1403_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U9(
    .din0(grp_fu_1411_p0),
    .din1(kernel_patch_26),
    .din2(grp_fu_1411_p2),
    .dout(grp_fu_1411_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U10(
    .din0(grp_fu_1419_p0),
    .din1(kernel_patch_29),
    .din2(grp_fu_1419_p2),
    .dout(grp_fu_1419_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U11(
    .din0(grp_fu_1427_p0),
    .din1(kernel_patch_32),
    .din2(grp_fu_1427_p2),
    .dout(grp_fu_1427_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U12(
    .din0(grp_fu_1435_p0),
    .din1(kernel_patch_35),
    .din2(grp_fu_1435_p2),
    .dout(grp_fu_1435_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U13(
    .din0(grp_fu_1443_p0),
    .din1(kernel_patch_38),
    .din2(grp_fu_1443_p2),
    .dout(grp_fu_1443_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U14(
    .din0(grp_fu_1451_p0),
    .din1(kernel_patch_41),
    .din2(grp_fu_1451_p2),
    .dout(grp_fu_1451_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U15(
    .din0(grp_fu_1459_p0),
    .din1(kernel_patch_44),
    .din2(grp_fu_1459_p2),
    .dout(grp_fu_1459_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U16(
    .din0(grp_fu_1467_p0),
    .din1(kernel_patch_46),
    .din2(grp_fu_1467_p2),
    .dout(grp_fu_1467_p3)
);

fp_sop_mac_muladdbkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdbkb_U17(
    .din0(grp_fu_1475_p0),
    .din1(kernel_patch_48),
    .din2(grp_fu_1475_p2),
    .dout(grp_fu_1475_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U18(
    .din0(grp_fu_1483_p0),
    .din1(kernel_patch_1_read_reg_1742),
    .din2(add_ln178_reg_1747),
    .dout(grp_fu_1483_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U19(
    .din0(grp_fu_1490_p0),
    .din1(kernel_patch_3_read_reg_1737),
    .din2(add_ln178_2_reg_1752),
    .dout(grp_fu_1490_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U20(
    .din0(grp_fu_1497_p0),
    .din1(kernel_patch_6_read_reg_1732),
    .din2(add_ln178_5_reg_1757),
    .dout(grp_fu_1497_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U21(
    .din0(grp_fu_1505_p0),
    .din1(kernel_patch_9_read_reg_1727),
    .din2(add_ln178_7_reg_1762),
    .dout(grp_fu_1505_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U22(
    .din0(grp_fu_1513_p0),
    .din1(kernel_patch_12_read_reg_1722),
    .din2(add_ln178_11_reg_1767),
    .dout(grp_fu_1513_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U23(
    .din0(grp_fu_1520_p0),
    .din1(kernel_patch_15_read_reg_1717),
    .din2(add_ln178_13_reg_1772),
    .dout(grp_fu_1520_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U24(
    .din0(grp_fu_1527_p0),
    .din1(kernel_patch_18_read_reg_1712),
    .din2(add_ln178_16_reg_1777),
    .dout(grp_fu_1527_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U25(
    .din0(grp_fu_1535_p0),
    .din1(kernel_patch_21_read_reg_1707),
    .din2(add_ln178_18_reg_1782),
    .dout(grp_fu_1535_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U26(
    .din0(grp_fu_1543_p0),
    .din1(kernel_patch_24_read_reg_1702),
    .din2(add_ln178_23_reg_1787),
    .dout(grp_fu_1543_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U27(
    .din0(grp_fu_1551_p0),
    .din1(kernel_patch_27_read_reg_1697),
    .din2(add_ln178_25_reg_1792),
    .dout(grp_fu_1551_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U28(
    .din0(grp_fu_1559_p0),
    .din1(kernel_patch_30_read_reg_1692),
    .din2(add_ln178_28_reg_1797),
    .dout(grp_fu_1559_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U29(
    .din0(grp_fu_1567_p0),
    .din1(kernel_patch_33_read_reg_1687),
    .din2(add_ln178_30_reg_1802),
    .dout(grp_fu_1567_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U30(
    .din0(grp_fu_1575_p0),
    .din1(kernel_patch_36_read_reg_1682),
    .din2(add_ln178_34_reg_1807),
    .dout(grp_fu_1575_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U31(
    .din0(grp_fu_1582_p0),
    .din1(kernel_patch_39_read_reg_1677),
    .din2(add_ln178_36_reg_1812),
    .dout(grp_fu_1582_p3)
);

fp_sop_mac_muladdcud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
fp_sop_mac_muladdcud_U32(
    .din0(grp_fu_1589_p0),
    .din1(kernel_patch_42_read_reg_1672),
    .din2(add_ln178_39_reg_1817),
    .dout(grp_fu_1589_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln178_10_reg_1887 <= add_ln178_10_fu_1304_p2;
        add_ln178_21_reg_1892 <= add_ln178_21_fu_1313_p2;
        add_ln178_46_reg_1897 <= add_ln178_46_fu_1331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln178_11_reg_1767 <= grp_fu_1379_p3;
        add_ln178_13_reg_1772 <= grp_fu_1387_p3;
        add_ln178_16_reg_1777 <= grp_fu_1395_p3;
        add_ln178_18_reg_1782 <= grp_fu_1403_p3;
        add_ln178_23_reg_1787 <= grp_fu_1411_p3;
        add_ln178_25_reg_1792 <= grp_fu_1419_p3;
        add_ln178_28_reg_1797 <= grp_fu_1427_p3;
        add_ln178_2_reg_1752 <= grp_fu_1355_p3;
        add_ln178_30_reg_1802 <= grp_fu_1435_p3;
        add_ln178_34_reg_1807 <= grp_fu_1443_p3;
        add_ln178_36_reg_1812 <= grp_fu_1451_p3;
        add_ln178_39_reg_1817 <= grp_fu_1459_p3;
        add_ln178_41_reg_1822 <= grp_fu_1467_p3;
        add_ln178_42_reg_1827 <= grp_fu_1475_p3;
        add_ln178_5_reg_1757 <= grp_fu_1363_p3;
        add_ln178_7_reg_1762 <= grp_fu_1371_p3;
        add_ln178_reg_1747 <= grp_fu_1347_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln178_12_reg_1847 <= grp_fu_1513_p3;
        add_ln178_14_reg_1852 <= grp_fu_1520_p3;
        add_ln178_1_reg_1832 <= grp_fu_1483_p3;
        add_ln178_35_reg_1872 <= grp_fu_1575_p3;
        add_ln178_37_reg_1877 <= grp_fu_1582_p3;
        add_ln178_3_reg_1837 <= grp_fu_1490_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln178_20_reg_1857 <= add_ln178_20_fu_1279_p2;
        add_ln178_27_reg_1862 <= add_ln178_27_fu_1283_p2;
        add_ln178_32_reg_1867 <= add_ln178_32_fu_1287_p2;
        add_ln178_44_reg_1882 <= add_ln178_44_fu_1295_p2;
        add_ln178_9_reg_1842 <= add_ln178_9_fu_1275_p2;
        kernel_patch_12_read_reg_1722 <= kernel_patch_12;
        kernel_patch_15_read_reg_1717 <= kernel_patch_15;
        kernel_patch_18_read_reg_1712 <= kernel_patch_18;
        kernel_patch_1_read_reg_1742 <= kernel_patch_1;
        kernel_patch_21_read_reg_1707 <= kernel_patch_21;
        kernel_patch_24_read_reg_1702 <= kernel_patch_24;
        kernel_patch_27_read_reg_1697 <= kernel_patch_27;
        kernel_patch_30_read_reg_1692 <= kernel_patch_30;
        kernel_patch_33_read_reg_1687 <= kernel_patch_33;
        kernel_patch_36_read_reg_1682 <= kernel_patch_36;
        kernel_patch_39_read_reg_1677 <= kernel_patch_39;
        kernel_patch_3_read_reg_1737 <= kernel_patch_3;
        kernel_patch_42_read_reg_1672 <= kernel_patch_42;
        kernel_patch_6_read_reg_1732 <= kernel_patch_6;
        kernel_patch_9_read_reg_1727 <= kernel_patch_9;
        pixel_window_12_read_reg_1647 <= pixel_window_12;
        pixel_window_15_read_reg_1642 <= pixel_window_15;
        pixel_window_18_read_reg_1637 <= pixel_window_18;
        pixel_window_1_read_reg_1667 <= pixel_window_1;
        pixel_window_21_read_reg_1632 <= pixel_window_21;
        pixel_window_24_read_reg_1627 <= pixel_window_24;
        pixel_window_27_read_reg_1622 <= pixel_window_27;
        pixel_window_30_read_reg_1617 <= pixel_window_30;
        pixel_window_33_read_reg_1612 <= pixel_window_33;
        pixel_window_36_read_reg_1607 <= pixel_window_36;
        pixel_window_39_read_reg_1602 <= pixel_window_39;
        pixel_window_3_read_reg_1662 <= pixel_window_3;
        pixel_window_42_read_reg_1597 <= pixel_window_42;
        pixel_window_6_read_reg_1657 <= pixel_window_6;
        pixel_window_9_read_reg_1652 <= pixel_window_9;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_val_ap_vld = 1'b1;
    end else begin
        out_val_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln178_10_fu_1304_p2 = (add_ln178_9_reg_1842 + add_ln178_4_fu_1300_p2);

assign add_ln178_15_fu_1309_p2 = ($signed(add_ln178_14_reg_1852) + $signed(add_ln178_12_reg_1847));

assign add_ln178_20_fu_1279_p2 = ($signed(grp_fu_1535_p3) + $signed(grp_fu_1527_p3));

assign add_ln178_21_fu_1313_p2 = (add_ln178_20_reg_1857 + add_ln178_15_fu_1309_p2);

assign add_ln178_22_fu_1337_p2 = (add_ln178_21_reg_1892 + add_ln178_10_reg_1887);

assign add_ln178_27_fu_1283_p2 = ($signed(grp_fu_1551_p3) + $signed(grp_fu_1543_p3));

assign add_ln178_32_fu_1287_p2 = ($signed(grp_fu_1567_p3) + $signed(grp_fu_1559_p3));

assign add_ln178_33_fu_1318_p2 = (add_ln178_32_reg_1867 + add_ln178_27_reg_1862);

assign add_ln178_38_fu_1322_p2 = ($signed(add_ln178_37_reg_1877) + $signed(add_ln178_35_reg_1872));

assign add_ln178_43_fu_1291_p2 = ($signed(add_ln178_42_reg_1827) + $signed(add_ln178_41_reg_1822));

assign add_ln178_44_fu_1295_p2 = ($signed(add_ln178_43_fu_1291_p2) + $signed(grp_fu_1589_p3));

assign add_ln178_45_fu_1326_p2 = (add_ln178_44_reg_1882 + add_ln178_38_fu_1322_p2);

assign add_ln178_46_fu_1331_p2 = (add_ln178_45_fu_1326_p2 + add_ln178_33_fu_1318_p2);

assign add_ln178_4_fu_1300_p2 = ($signed(add_ln178_3_reg_1837) + $signed(add_ln178_1_reg_1832));

assign add_ln178_9_fu_1275_p2 = ($signed(grp_fu_1505_p3) + $signed(grp_fu_1497_p3));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign grp_fu_1347_p0 = grp_fu_1347_p00;

assign grp_fu_1347_p00 = pixel_window_2;

assign grp_fu_1347_p2 = ($signed({{1'b0}, {mul_ln123_fu_819_p0}}) * $signed(mul_ln123_fu_819_p1));

assign grp_fu_1355_p0 = grp_fu_1355_p00;

assign grp_fu_1355_p00 = pixel_window_5;

assign grp_fu_1355_p2 = ($signed({{1'b0}, {mul_ln127_fu_841_p0}}) * $signed(mul_ln127_fu_841_p1));

assign grp_fu_1363_p0 = grp_fu_1363_p00;

assign grp_fu_1363_p00 = pixel_window_8;

assign grp_fu_1363_p2 = ($signed({{1'b0}, {mul_ln130_fu_863_p0}}) * $signed(mul_ln130_fu_863_p1));

assign grp_fu_1371_p0 = grp_fu_1371_p00;

assign grp_fu_1371_p00 = pixel_window_11;

assign grp_fu_1371_p2 = ($signed({{1'b0}, {mul_ln134_fu_885_p0}}) * $signed(mul_ln134_fu_885_p1));

assign grp_fu_1379_p0 = grp_fu_1379_p00;

assign grp_fu_1379_p00 = pixel_window_14;

assign grp_fu_1379_p2 = ($signed({{1'b0}, {mul_ln137_fu_907_p0}}) * $signed(mul_ln137_fu_907_p1));

assign grp_fu_1387_p0 = grp_fu_1387_p00;

assign grp_fu_1387_p00 = pixel_window_17;

assign grp_fu_1387_p2 = ($signed({{1'b0}, {mul_ln140_fu_929_p0}}) * $signed(mul_ln140_fu_929_p1));

assign grp_fu_1395_p0 = grp_fu_1395_p00;

assign grp_fu_1395_p00 = pixel_window_20;

assign grp_fu_1395_p2 = ($signed({{1'b0}, {mul_ln143_fu_951_p0}}) * $signed(mul_ln143_fu_951_p1));

assign grp_fu_1403_p0 = grp_fu_1403_p00;

assign grp_fu_1403_p00 = pixel_window_23;

assign grp_fu_1403_p2 = ($signed({{1'b0}, {mul_ln147_fu_973_p0}}) * $signed(mul_ln147_fu_973_p1));

assign grp_fu_1411_p0 = grp_fu_1411_p00;

assign grp_fu_1411_p00 = pixel_window_26;

assign grp_fu_1411_p2 = ($signed({{1'b0}, {mul_ln150_fu_995_p0}}) * $signed(mul_ln150_fu_995_p1));

assign grp_fu_1419_p0 = grp_fu_1419_p00;

assign grp_fu_1419_p00 = pixel_window_29;

assign grp_fu_1419_p2 = ($signed({{1'b0}, {mul_ln153_fu_1017_p0}}) * $signed(mul_ln153_fu_1017_p1));

assign grp_fu_1427_p0 = grp_fu_1427_p00;

assign grp_fu_1427_p00 = pixel_window_32;

assign grp_fu_1427_p2 = ($signed({{1'b0}, {mul_ln157_fu_1039_p0}}) * $signed(mul_ln157_fu_1039_p1));

assign grp_fu_1435_p0 = grp_fu_1435_p00;

assign grp_fu_1435_p00 = pixel_window_35;

assign grp_fu_1435_p2 = ($signed({{1'b0}, {mul_ln160_fu_1061_p0}}) * $signed(mul_ln160_fu_1061_p1));

assign grp_fu_1443_p0 = grp_fu_1443_p00;

assign grp_fu_1443_p00 = pixel_window_38;

assign grp_fu_1443_p2 = ($signed({{1'b0}, {mul_ln163_fu_1083_p0}}) * $signed(mul_ln163_fu_1083_p1));

assign grp_fu_1451_p0 = grp_fu_1451_p00;

assign grp_fu_1451_p00 = pixel_window_41;

assign grp_fu_1451_p2 = ($signed({{1'b0}, {mul_ln167_fu_1105_p0}}) * $signed(mul_ln167_fu_1105_p1));

assign grp_fu_1459_p0 = grp_fu_1459_p00;

assign grp_fu_1459_p00 = pixel_window_44;

assign grp_fu_1459_p2 = ($signed({{1'b0}, {mul_ln170_fu_1127_p0}}) * $signed(mul_ln170_fu_1127_p1));

assign grp_fu_1467_p0 = grp_fu_1467_p00;

assign grp_fu_1467_p00 = pixel_window_46;

assign grp_fu_1467_p2 = ($signed({{1'b0}, {mul_ln172_fu_1149_p0}}) * $signed(mul_ln172_fu_1149_p1));

assign grp_fu_1475_p0 = grp_fu_1475_p00;

assign grp_fu_1475_p00 = pixel_window_48;

assign grp_fu_1475_p2 = ($signed({{1'b0}, {mul_ln174_fu_1171_p0}}) * $signed(mul_ln174_fu_1171_p1));

assign grp_fu_1483_p0 = grp_fu_1483_p00;

assign grp_fu_1483_p00 = pixel_window_1_read_reg_1667;

assign grp_fu_1490_p0 = grp_fu_1490_p00;

assign grp_fu_1490_p00 = pixel_window_3_read_reg_1662;

assign grp_fu_1497_p0 = grp_fu_1497_p00;

assign grp_fu_1497_p00 = pixel_window_6_read_reg_1657;

assign grp_fu_1505_p0 = grp_fu_1505_p00;

assign grp_fu_1505_p00 = pixel_window_9_read_reg_1652;

assign grp_fu_1513_p0 = grp_fu_1513_p00;

assign grp_fu_1513_p00 = pixel_window_12_read_reg_1647;

assign grp_fu_1520_p0 = grp_fu_1520_p00;

assign grp_fu_1520_p00 = pixel_window_15_read_reg_1642;

assign grp_fu_1527_p0 = grp_fu_1527_p00;

assign grp_fu_1527_p00 = pixel_window_18_read_reg_1637;

assign grp_fu_1535_p0 = grp_fu_1535_p00;

assign grp_fu_1535_p00 = pixel_window_21_read_reg_1632;

assign grp_fu_1543_p0 = grp_fu_1543_p00;

assign grp_fu_1543_p00 = pixel_window_24_read_reg_1627;

assign grp_fu_1551_p0 = grp_fu_1551_p00;

assign grp_fu_1551_p00 = pixel_window_27_read_reg_1622;

assign grp_fu_1559_p0 = grp_fu_1559_p00;

assign grp_fu_1559_p00 = pixel_window_30_read_reg_1617;

assign grp_fu_1567_p0 = grp_fu_1567_p00;

assign grp_fu_1567_p00 = pixel_window_33_read_reg_1612;

assign grp_fu_1575_p0 = grp_fu_1575_p00;

assign grp_fu_1575_p00 = pixel_window_36_read_reg_1607;

assign grp_fu_1582_p0 = grp_fu_1582_p00;

assign grp_fu_1582_p00 = pixel_window_39_read_reg_1602;

assign grp_fu_1589_p0 = grp_fu_1589_p00;

assign grp_fu_1589_p00 = pixel_window_42_read_reg_1597;

assign mul_ln123_fu_819_p0 = mul_ln123_fu_819_p00;

assign mul_ln123_fu_819_p00 = pixel_window_0;

assign mul_ln123_fu_819_p1 = kernel_patch_0;

assign mul_ln127_fu_841_p0 = mul_ln127_fu_841_p00;

assign mul_ln127_fu_841_p00 = pixel_window_4;

assign mul_ln127_fu_841_p1 = kernel_patch_4;

assign mul_ln130_fu_863_p0 = mul_ln130_fu_863_p00;

assign mul_ln130_fu_863_p00 = pixel_window_7;

assign mul_ln130_fu_863_p1 = kernel_patch_7;

assign mul_ln134_fu_885_p0 = mul_ln134_fu_885_p00;

assign mul_ln134_fu_885_p00 = pixel_window_10;

assign mul_ln134_fu_885_p1 = kernel_patch_10;

assign mul_ln137_fu_907_p0 = mul_ln137_fu_907_p00;

assign mul_ln137_fu_907_p00 = pixel_window_13;

assign mul_ln137_fu_907_p1 = kernel_patch_13;

assign mul_ln140_fu_929_p0 = mul_ln140_fu_929_p00;

assign mul_ln140_fu_929_p00 = pixel_window_16;

assign mul_ln140_fu_929_p1 = kernel_patch_16;

assign mul_ln143_fu_951_p0 = mul_ln143_fu_951_p00;

assign mul_ln143_fu_951_p00 = pixel_window_19;

assign mul_ln143_fu_951_p1 = kernel_patch_19;

assign mul_ln147_fu_973_p0 = mul_ln147_fu_973_p00;

assign mul_ln147_fu_973_p00 = pixel_window_22;

assign mul_ln147_fu_973_p1 = kernel_patch_22;

assign mul_ln150_fu_995_p0 = mul_ln150_fu_995_p00;

assign mul_ln150_fu_995_p00 = pixel_window_25;

assign mul_ln150_fu_995_p1 = kernel_patch_25;

assign mul_ln153_fu_1017_p0 = mul_ln153_fu_1017_p00;

assign mul_ln153_fu_1017_p00 = pixel_window_28;

assign mul_ln153_fu_1017_p1 = kernel_patch_28;

assign mul_ln157_fu_1039_p0 = mul_ln157_fu_1039_p00;

assign mul_ln157_fu_1039_p00 = pixel_window_31;

assign mul_ln157_fu_1039_p1 = kernel_patch_31;

assign mul_ln160_fu_1061_p0 = mul_ln160_fu_1061_p00;

assign mul_ln160_fu_1061_p00 = pixel_window_34;

assign mul_ln160_fu_1061_p1 = kernel_patch_34;

assign mul_ln163_fu_1083_p0 = mul_ln163_fu_1083_p00;

assign mul_ln163_fu_1083_p00 = pixel_window_37;

assign mul_ln163_fu_1083_p1 = kernel_patch_37;

assign mul_ln167_fu_1105_p0 = mul_ln167_fu_1105_p00;

assign mul_ln167_fu_1105_p00 = pixel_window_40;

assign mul_ln167_fu_1105_p1 = kernel_patch_40;

assign mul_ln170_fu_1127_p0 = mul_ln170_fu_1127_p00;

assign mul_ln170_fu_1127_p00 = pixel_window_43;

assign mul_ln170_fu_1127_p1 = kernel_patch_43;

assign mul_ln172_fu_1149_p0 = mul_ln172_fu_1149_p00;

assign mul_ln172_fu_1149_p00 = pixel_window_45;

assign mul_ln172_fu_1149_p1 = kernel_patch_45;

assign mul_ln174_fu_1171_p0 = mul_ln174_fu_1171_p00;

assign mul_ln174_fu_1171_p00 = pixel_window_47;

assign mul_ln174_fu_1171_p1 = kernel_patch_47;

assign out_val = (add_ln178_46_reg_1897 + add_ln178_22_fu_1337_p2);

endmodule //fp_sop
